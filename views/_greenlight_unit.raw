require 'rails_helper'
RSpec.describe CSVImportable do
  let (:test_class) { double("TestClass") { include CSVImportable } }
  let (:file) { File.open(Rails.root.join("spec/fixtures/csv_example.csv")) }
  let(:hash_row){ {:id=>"1",:first_name => 'pepe',:last_name => 'trueno' } }

  before do
    class FakeModel
      include ActiveModel::Model
      include CSVImportable
      csv_allow_headers :id, :first_name, :last_name
 
      csv_allow_headers :id, :first_name, :last_name
 
      attr_accessor :id,:first_name,:last_name
      def self.create(params); end
      def self.find_by_id(id); end
 
      def update(params); end
    end
  end
 
  describe "create a new entity" do
    before { expect(FakeModel).to receive(:create).with(hash_row) }
    it { FakeModel.import_sync(file) }
  end
 
  describe "update an entity" do
    before do
      expect_any_instance_of(FakeModel).to receive(:update).with(hash_row)
      expect(FakeModel).to receive(:find_by_id).with("1").and_return(FakeModel.new(hash_row))
    end
    it { FakeModel.import_sync(file) }
  
  end
 
  describe "csv_rename_header" do
    before do
      class FakeModel
        csv_allow_headers :id, :first_name, :other_name
        csv_rename_headers last_name: :other_name
      end
    end
    let(:hash_row){ {:id=>"1",:first_name => 'pepe',:other_name => 'trueno' } }
    before { expect(FakeModel).to receive(:create).with(hash_row) }
    it { FakeModel.import_sync(file) }
  end
  describe "csv_allow_headers" do
    before do
      class FakeModel
        csv_rename_headers last_name: :other_name
        csv_allow_headers :id, :other_name
      end
    end
    let(:hash_row){ {:id=>"1", :other_name => 'trueno' } }
    before { expect(FakeModel).to receive(:create).with(hash_row) }
    it { FakeModel.import_sync(file) }
 
  end
end
